CREATE DATABASE LUYENTAP_EX_3;

USE LUYENTAP_EX_3
 CREATE TABLE CATEGORIES (
    CATEGORY_ID INT PRIMARY KEY,
    NAME VARCHAR(255)
 );
 
 CREATE TABLE BOOKS (
    BOOK_ID INT PRIMARY KEY,
    TITLE VARCHAR(255) ,
    AUTHOR VARCHAR(255),
    PUBLICATION_YEAR INT,
    AVAILABLE_QUANTITY INT,
    CATEGORY_ID INT NOT NULL
 );
 
 CREATE TABLE READERS(
   READER_ID INT PRIMARY KEY,
   NAME VARCHAR(255),
   PHONE_NUMBER VARCHAR(15),
   EMAIL VARCHAR(255) 
 );
 
 CREATE TABLE BORROWING (
   BORROW_ID INT PRIMARY KEY,
   READER_ID INT,
   BOOK_ID INT,
   BORROW_DATE DATE ,
   DUE_DATE  DATE
 );
 
 CREATE TABLE RETURNING (
    RETURN_ID INT PRIMARY KEY,
    BORROW_ID INT,
    RETURN_DATE DATE
 );
 
 CREATE TABLE FINES (
    FINR_ID INT,
    RETURN_ID INT,
    FINE_AMOUNT DECIMAL(10,2)
 );
 
 ALTER TABLE BOOKS
 ADD CONSTRAINT FK_CATEGORIES_BOOKS
 FOREIGN KEY(CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID) ON DELETE CASCADE;
 
 ALTER TABLE BORROWING
 ADD CONSTRAINT FK_READERS_BORROWNG
 FOREIGN KEY(READER_ID) REFERENCES READERS(READER_ID) ON DELETE CASCADE;
 
 ALTER TABLE BORROWING
 ADD CONSTRAINT FK_BOOKS_BORROWNG
 FOREIGN KEY(BOOK_ID) REFERENCES BOOKS(BOOK_ID) ON DELETE CASCADE;
 
 ALTER TABLE RETURNING
 ADD CONSTRAINT FK_BORROWNG_RETURNING
 FOREIGN KEY(BORROW_ID) REFERENCES BORROWING(BORROW_ID) ON DELETE CASCADE;
 
 ALTER TABLE FINES
 ADD CONSTRAINT FK_RETURNING_FINES
 FOREIGN KEY(RETURN_ID) REFERENCES RETURNING(RETURN_ID) ON DELETE CASCADE;
 

-- Inserting categories of books into the Categories table
INSERT INTO Categories (category_id, name) VALUES
(1, 'Science'),
(2, 'Literature'),
(3, 'History'),
(4, 'Technology'),
(5, 'Psychology');

-- Inserting books into the Books table with details such as title, author, and category
INSERT INTO Books (book_id, title, author, publication_year, available_quantity, category_id) VALUES
(1, 'The History of Vietnam', 'John Smith', 2001, 10, 1),
(2, 'Python Programming', 'Jane Doe', 2020, 5, 4),
(3, 'Famous Writers', 'Emily Johnson', 2018, 7, 2),
(4, 'Machine Learning Basics', 'Michael Brown', 2022, 3, 4),
(5, 'Psychology and Behavior', 'Sarah Davis', 2019, 6, 5);

-- Inserting library users (readers) into the Readers table
INSERT INTO Readers (reader_id, name, phone_number, email) VALUES
(1, 'Alice Williams', '123-456-7890', 'alice.williams@email.com'),
(2, 'Bob Johnson', '987-654-3210', 'bob.johnson@email.com'),
(3, 'Charlie Brown', '555-123-4567', 'charlie.brown@email.com');

-- Inserting borrowing records for books
INSERT INTO Borrowing (borrow_id, reader_id, book_id, borrow_date, due_date) VALUES
(1, 1, 1, '2025-02-19', '2025-02-15'),
(2, 2, 2, '2025-02-03', '2025-02-17'),
(3, 3, 3, '2025-02-02', '2025-02-16'),
(4, 1, 2, '2025-03-10', '2025-02-24'),
(5, 2, 3, '2025-05-11', '2025-02-25'),
(6, 2, 3, '2025-02-11', '2025-02-25');


-- Inserting book return records into the Returning table
INSERT INTO Returning (return_id, borrow_id, return_date) VALUES
(1, 1, '2025-03-14'),
(2, 2, '2025-02-28'),
(3, 3, '2025-02-15'),
(4, 4, '2025-02-20'),  
(5, 4, '2025-02-20');

-- Inserting penalty records into the Fines table for late returns
INSERT INTO Fines (finr_id, return_id, fine_amount) VALUES
(1, 1, 5.00),
(2, 2, 0.00),
(3, 3, 2.00);



-- Truy vấn
SELECT 
   READERS.NAME AS READER_NAME,
   BOOKS.TITLE AS BOOK_TITLE,
   BORROWING.BORROW_DATE AS BORROW_DATE
FROM BORROWING
INNER JOIN READERS ON BORROWING.READER_ID = READERS.READER_ID 
INNER JOIN BOOKS ON BORROWING.BOOK_ID = BOOKS.BOOK_ID



SELECT
   BOOKS.TITLE AS BOOK_TITLE,
   BOOKS.AUTHOR AS BOOK_AUTHOR,
   CATEGORIES.NAME AS CATEGORY_NAME
FROM BOOKS
INNER JOIN CATEGORIES
ON BOOKS.CATEGORY_ID = CATEGORIES.CATEGORY_ID

-- tên bạn đọc, số tiền phạt và ngày trả sách.
SELECT 
   READERS.NAME AS READER_NAME,
   FINES.FINE_AMOUNT AS FINE_AMOUNT,
   RETURNING.RETURN_DATE AS RETURN_DATE
 FROM FINES
INNER JOIN RETURNING ON RETURNING.RETURN_ID = FINES.RETURN_ID
INNER JOIN BORROWING ON RETURNING.BORROW_ID = BORROWING.BORROW_ID
INNER JOIN READERS ON READERS.READER_ID = BORROWING.READER_ID
WHERE FINES.FINE_AMOUNT > 0;

 
 
 SELECT 
   READERS.NAME AS READER_NAME,
   FINES.FINE_AMOUNT AS FINE_AMOUNT,
   RETURNING.RETURN_DATE AS RETURN_DATE
 FROM RETURNING
 INNER JOIN FINES ON RETURNING.RETURN_ID = FINES.RETURN_ID
 INNER JOIN BORROWING ON RETURNING.BORROW_ID = BORROWING.BORROW_ID 
 INNER JOIN READERS ON BORROWING.READER_ID = READERS.READER_ID
 
 

SELECT 
   READERS.NAME AS READER_NAME,
   FINES.FINE_AMOUNT AS FINE_AMOUNT,
   RETURNING.RETURN_DATE AS RETURN_DATE
 FROM READERS
 INNER JOIN BORROWING ON READERS.READER_ID = BORROWING.READER_ID
 INNER JOIN RETURNING ON RETURNING.BORROW_ID = BORROWING.BORROW_ID
 INNER JOIN FINES ON FINES.RETURN_ID = RETURNING.RETURN_ID
 
 
 
 -- Thực hiện update, delete, insert
 UPDATE BOOKS
 SET  AVAILABLE_QUANTITY = 15
 WHERE BOOK_ID = 1
 
 DELETE FROM READERS
 WHERE READER_ID = 2
 
 INSERT INTO READERS 
 VALUE (2, 'Bob Johnson', '987-654-3210', 'bob.johnson@email.com')